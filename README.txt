README for PatSep, created 12/2018

This code is associated with the article "Temporal pattern separation in hippocampal neurons through multiplexed neural codes", by A. Madar, L. Ewell and M. Jones (2018) available on BioRxiv: https://www.biorxiv.org/content/early/2018/09/19/421479
 For questions, please contact Antoine Madar at madar@wisc.edu or antoinemadar461@gmail.com

The main analysis is performed using the scripts in the SimilarityAnalysis folder. Most figure panels are produced by SimilarityAnalysis_AllCT_Collate_Publish.m.

*Demo (Similarity Analysis)*
1- Download all datasets (axograph protocols and recordings) from BioStudies: https://www.ebi.ac.uk/biostudies/studies/S-BSST219

2- Go in NameFiles folder, open a namefile and replace all paths with the ones on your machine. 

PatSepFileListAllGC_2010toDec2015.m <---> recordings in GCs from young animals, with P10Hz input sets
PatSepFilesListFS.m <---> recordings in FS interneurons from young animals, with P10Hz input sets
PatSepHilarMossyCells.m <---> recordings in HMCs  from young animals, with P10Hz input sets
PatSepFiles_CA3_gzine_30Hz.m <-> CA3 PCs from young animals with P30Hz input sets (+100nm gzn)
PatSepFiles_DGGCctrl_gzine_30Hz.m <---> GCs from young animals +100nm gzn P30Hz input sets (i.e. controls for CA3 PCs recordings)
PatSepFilesFalconHawk_SFrange_Sa.m <---> GCs from adult mice, PdeltaFR and B10Hz input sets
PatSepFilesBeforeGabazine.m <---> GCs from young mice, P10Hz input set (Rin = 0.75)
PatSepFilesAfterGabazine.m <---> same GCs as line above with 100nm gzn in bath, P10Hz input set (Rin = 0.75)

3- Go in SimilarityAnalysis folder and open SimilarityAnalysis_Batch.m. Add your resultpath. Uncomment the appropriate namefile to analyze the dataset of your choice. Modify the binsizes if desired. Write in a name for the output cell array (e.g. GCyo_P10Hz_collate.mat).
Running this script will call for SimilarityAnalysis.m which will compute the pairwise and average input and output similarity (R,NDP and SF) and the dispersion in burstiness (compactness and occupancy) and firing rate for each recording set listed in the used namefile. 
SimilarityAnalysis_Batch.m produces Cdata, a cell array of structs collating all the values for each recording sets. This collate cell array is saved under your pre-specified resultpath. 

4- Redo 2 and 3 for all the other namefiles. 

5- Open SimilarityAnalysis_AllCT_Collate_Publish.m, replace paths with your own to upload the different collate.mat cell arrays produced for each namefile (i.e. dataset).  
This will produce most of the figures of the article (Fig 1F, 2E-F, 3A-C, 4C, 5B, 6, 7C, 7E, 8, 9B). 

Alternatively, open SimilarityAnalysis_Collate_summary.m. This script compares two datasets only and produces graphs like the one in Fig 7D. Again, start by replacing the paths with your own. Uncomment the 2 paths corresponding to the datasets to compare. Be careful to modify the content of the "valid" vector such that it contains all indices of the input sets used in the analyzed dataset (i.e. the catnum indices of Files.Stim.File{catnum} listed in the appropriate namefile). "valid" has to be the same length or lower than the length of the collate.mat cell array it corresponds to. (for your reference, correct "valid" vectors are written for all datasets in SimilarityAnalysis_AllCT_Collate_Publish.m)

*SPIKE folder*
To analyze datasets using the SPIKE metric (and produce Fig 3D): 1) run KreuzStimRespBatch.m, which uses KreuzStimResp to produce a collate.mat cell array, then 2) run KreuzStimRespBatchCollate.m. 
Note: these scripts use an "older" matlab toolbox made available by the Kreuz lab. The Kreuz lab has now developed more flexible matlab functions to compute SPIKE and other metrics (http://wwwold.fi.isc.cnr.it/users/thomas.kreuz/sourcecode.html).  We plan to incorporate those functions in SimilarityAnalysis.m in the future. 

*NoiseFitFtestBurst folder* 
These scripts compute and analyze the average firing rate, average pBurst, interspike intervals and Kullback-Leibler divergence (cell burstiness) of recording sets.  
To produce Fig 7b and 9a: 1) run FSINcharacteristics.m  on the namefile of your choice, which will produce a collate.mat file for a given dataset, then 2) either run CompPairedTreatments_FR_pBurst.m (for Fig 7b) or BurstAnalysisCompAllCT_ISIandKLD.m (Fig 9a) using the collate.mat file generated by FSINcharecteristics.m. 
The Kullback-Leibler divergence was computed using a matlab function developed by David Fass: https://www.mathworks.com/matlabcentral/fileexchange/13089-kldiv 

* MakeInputTrains folder*
MakeCorrelatedPoissons.m <---> P10Hz and P30Hz input sets
makeCorrelatedPoissons_minSF <---> BdeltaFR input set
Those two scripts above use code developed by the Bethge lab: http://bethgelab.org/software/mvd/
MakeInputs_lowSF_CstFR <---> B10Hz input set

Our input sets can be downloaded from BioStudies: https://www.ebi.ac.uk/biostudies/studies/S-BSST219
To analyze those input sets or your own, go in the ZFigure subfolder and run stimRastersCorrMatrices.m 
This code was used to generate Fig 1B, 4A-B and S2.

*Simulations_Fig2ac_S1 folder*
Analysis on synthetic spike trains, to study the relationship between R, NDP, and SF, and how they are impacted by firing rate increments (while preserving temporal structure). 
rasterCorrVsVectorCases.m produces Fig 2A-C
LinearRegBtwNDPandSFvsCorr_fakeData_AllPerms.m produces Fig S1A and C

*Utilities folder*
Auxiliary functions developed in-house (Jones lab) necessary for the aforementioned code to run. For example, the subfolder Axograph contains functions to read Axograph files (see SimilarityAnalysis.m  for an example of how to use them)

*External dependencies*
 In addition to the toolboxes mentioned above (for computing SPIKE, KLDIV and making correlated spiketrains), our code also uses the Brewermap toolbox: https://www.mathworks.com/matlabcentral/fileexchange/45208-colorbrewer-attractive-and-distinctive-colormaps  
and the plot_ci function: https://www.mathworks.com/matlabcentral/fileexchange/31752-plot_ci








  
